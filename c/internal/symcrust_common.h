/* 
  This file was generated by KaRaMeL <https://github.com/FStarLang/karamel>
  KaRaMeL invocation: /Users/jonathan/Code/eurydice/eurydice symcrust.llbc --output c/ -fcomments --config c.yaml
  F* version: <unknown>
  KaRaMeL version: 52173e05
 */

#ifndef __internal_symcrust_common_H
#define __internal_symcrust_common_H

#include "eurydice_glue.h"


#if defined(__cplusplus)
extern "C" {
#endif

#include "../symcrust_common.h"

/**
A monomorphic instance of core.ops.range.Range
with types size_t

*/
typedef struct core_ops_range_Range_08_s
{
  size_t start;
  size_t end;
}
core_ops_range_Range_08;

static inline uint16_t core_num__u16_7__from_le_bytes(uint8_t x0[2U]);

static inline uint32_t core_num__u32_8__from_le_bytes(uint8_t x0[4U]);

static inline void core_num__u32_8__to_le_bytes(uint32_t x0, uint8_t x1[4U]);

static inline uint32_t core_num__u32_8__wrapping_add(uint32_t x0, uint32_t x1);

static inline uint32_t core_num__u32_8__wrapping_mul(uint32_t x0, uint32_t x1);

static inline uint32_t core_num__u32_8__wrapping_sub(uint32_t x0, uint32_t x1);

static inline size_t core_num__usize_11__wrapping_sub(size_t x0, size_t x1);

symcrust_common_Error symcrust_common_random(Eurydice_slice dst);

void symcrust_common_wipe(uint8_t *pb_data, size_t cb_data);

/**
This function found in impl {(core::cmp::PartialEq<symcrust::common::Error> for symcrust::common::Error)#1}
*/
bool symcrust_common_eq_3d(symcrust_common_Error *self, symcrust_common_Error *other);

extern bool
symcrust_common___core__cmp__PartialEq_symcrust__common__Error__for_symcrust__common__Error__1__ne(
  symcrust_common_Error *x0,
  symcrust_common_Error *x1
);

#if defined(__cplusplus)
}
#endif

#define __internal_symcrust_common_H_DEFINED
#endif
