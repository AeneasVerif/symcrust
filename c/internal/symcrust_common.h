/* 
  This file was generated by KaRaMeL <https://github.com/FStarLang/karamel>
  KaRaMeL invocation: /Users/jonathan/Code/eurydice/eurydice symcrust.llbc --output c/ -fcomments --config c.yaml
  F* version: <unknown>
  KaRaMeL version: 4cd1f764
 */

#ifndef __internal_symcrust_common_H
#define __internal_symcrust_common_H

#include "eurydice_glue.h"


#if defined(__cplusplus)
extern "C" {
#endif

#include "../symcrust_common.h"

/**
A monomorphic instance of core.ops.range.Range
with types size_t

*/
typedef struct core_ops_range_Range_08_s
{
  size_t start;
  size_t end;
}
core_ops_range_Range_08;

#define core_ptr_alignment_AlignmentEnum__Align1Shl0 1
#define core_ptr_alignment_AlignmentEnum__Align1Shl1 2
#define core_ptr_alignment_AlignmentEnum__Align1Shl2 4
#define core_ptr_alignment_AlignmentEnum__Align1Shl3 8
#define core_ptr_alignment_AlignmentEnum__Align1Shl4 16
#define core_ptr_alignment_AlignmentEnum__Align1Shl5 32
#define core_ptr_alignment_AlignmentEnum__Align1Shl6 64
#define core_ptr_alignment_AlignmentEnum__Align1Shl7 128
#define core_ptr_alignment_AlignmentEnum__Align1Shl8 256
#define core_ptr_alignment_AlignmentEnum__Align1Shl9 512
#define core_ptr_alignment_AlignmentEnum__Align1Shl10 1024
#define core_ptr_alignment_AlignmentEnum__Align1Shl11 2048
#define core_ptr_alignment_AlignmentEnum__Align1Shl12 4096
#define core_ptr_alignment_AlignmentEnum__Align1Shl13 8192
#define core_ptr_alignment_AlignmentEnum__Align1Shl14 16384
#define core_ptr_alignment_AlignmentEnum__Align1Shl15 32768
#define core_ptr_alignment_AlignmentEnum__Align1Shl16 65536
#define core_ptr_alignment_AlignmentEnum__Align1Shl17 131072
#define core_ptr_alignment_AlignmentEnum__Align1Shl18 262144
#define core_ptr_alignment_AlignmentEnum__Align1Shl19 524288
#define core_ptr_alignment_AlignmentEnum__Align1Shl20 1048576
#define core_ptr_alignment_AlignmentEnum__Align1Shl21 2097152
#define core_ptr_alignment_AlignmentEnum__Align1Shl22 4194304
#define core_ptr_alignment_AlignmentEnum__Align1Shl23 8388608
#define core_ptr_alignment_AlignmentEnum__Align1Shl24 16777216
#define core_ptr_alignment_AlignmentEnum__Align1Shl25 33554432
#define core_ptr_alignment_AlignmentEnum__Align1Shl26 67108864
#define core_ptr_alignment_AlignmentEnum__Align1Shl27 134217728
#define core_ptr_alignment_AlignmentEnum__Align1Shl28 268435456
#define core_ptr_alignment_AlignmentEnum__Align1Shl29 536870912
#define core_ptr_alignment_AlignmentEnum__Align1Shl30 1073741824
#define core_ptr_alignment_AlignmentEnum__Align1Shl31 2147483648
#define core_ptr_alignment_AlignmentEnum__Align1Shl32 4294967296
#define core_ptr_alignment_AlignmentEnum__Align1Shl33 8589934592
#define core_ptr_alignment_AlignmentEnum__Align1Shl34 17179869184
#define core_ptr_alignment_AlignmentEnum__Align1Shl35 34359738368
#define core_ptr_alignment_AlignmentEnum__Align1Shl36 68719476736
#define core_ptr_alignment_AlignmentEnum__Align1Shl37 137438953472
#define core_ptr_alignment_AlignmentEnum__Align1Shl38 274877906944
#define core_ptr_alignment_AlignmentEnum__Align1Shl39 549755813888
#define core_ptr_alignment_AlignmentEnum__Align1Shl40 1099511627776
#define core_ptr_alignment_AlignmentEnum__Align1Shl41 2199023255552
#define core_ptr_alignment_AlignmentEnum__Align1Shl42 4398046511104
#define core_ptr_alignment_AlignmentEnum__Align1Shl43 8796093022208
#define core_ptr_alignment_AlignmentEnum__Align1Shl44 17592186044416
#define core_ptr_alignment_AlignmentEnum__Align1Shl45 35184372088832
#define core_ptr_alignment_AlignmentEnum__Align1Shl46 70368744177664
#define core_ptr_alignment_AlignmentEnum__Align1Shl47 140737488355328
#define core_ptr_alignment_AlignmentEnum__Align1Shl48 281474976710656
#define core_ptr_alignment_AlignmentEnum__Align1Shl49 562949953421312
#define core_ptr_alignment_AlignmentEnum__Align1Shl50 1125899906842624
#define core_ptr_alignment_AlignmentEnum__Align1Shl51 2251799813685248
#define core_ptr_alignment_AlignmentEnum__Align1Shl52 4503599627370496
#define core_ptr_alignment_AlignmentEnum__Align1Shl53 9007199254740992
#define core_ptr_alignment_AlignmentEnum__Align1Shl54 18014398509481984
#define core_ptr_alignment_AlignmentEnum__Align1Shl55 36028797018963968
#define core_ptr_alignment_AlignmentEnum__Align1Shl56 72057594037927936
#define core_ptr_alignment_AlignmentEnum__Align1Shl57 144115188075855872
#define core_ptr_alignment_AlignmentEnum__Align1Shl58 288230376151711744
#define core_ptr_alignment_AlignmentEnum__Align1Shl59 576460752303423488
#define core_ptr_alignment_AlignmentEnum__Align1Shl60 1152921504606846976
#define core_ptr_alignment_AlignmentEnum__Align1Shl61 2305843009213693952
#define core_ptr_alignment_AlignmentEnum__Align1Shl62 4611686018427387904
#define core_ptr_alignment_AlignmentEnum__Align1Shl63 9223372036854775808

typedef uint64_t core_ptr_alignment_AlignmentEnum;

typedef struct core_alloc_layout_Layout_s
{
  size_t size;
  core_ptr_alignment_AlignmentEnum align;
}
core_alloc_layout_Layout;

typedef struct Eurydice_str_s
{
  Prims_string data;
  size_t len;
}
Eurydice_str;

#define alloc_collections_CapacityOverflow 0
#define alloc_collections_AllocError 1

typedef uint8_t alloc_collections_TryReserveErrorKind_tags;

typedef struct alloc_collections_TryReserveErrorKind_s
{
  alloc_collections_TryReserveErrorKind_tags tag;
  core_alloc_layout_Layout layout;
}
alloc_collections_TryReserveErrorKind;

typedef alloc_collections_TryReserveErrorKind alloc_collections_TryReserveError;

extern core_result_Result_10
core_fmt__core__fmt__Formatter__a___write_str(core_fmt_Formatter *x0, Eurydice_str x1);

static inline uint16_t core_num__u16__from_le_bytes(uint8_t x0[2U]);

static inline uint32_t core_num__u32__from_le_bytes(uint8_t x0[4U]);

static inline void core_num__u32__to_le_bytes(uint32_t x0, uint8_t x1[4U]);

static inline uint32_t core_num__u32__wrapping_add(uint32_t x0, uint32_t x1);

static inline uint32_t core_num__u32__wrapping_mul(uint32_t x0, uint32_t x1);

static inline uint32_t core_num__u32__wrapping_sub(uint32_t x0, uint32_t x1);

static inline size_t core_num__usize__wrapping_sub(size_t x0, size_t x1);

extern void symcrust_common_SymCryptModuleInit(uint32_t x0, uint32_t x1);

extern void symcrust_common_SymCryptRandom(uint8_t *x0, size_t x1);

extern void symcrust_common_SymCryptWipe(uint8_t *x0, size_t x1);

void symcrust_common_init(void);

symcrust_common_Error symcrust_common_random(Eurydice_slice dst);

void symcrust_common_wipe(uint8_t *pb_data, size_t cb_data);

/**
This function found in impl {core::cmp::PartialEq<symcrust::common::Error> for symcrust::common::Error}
*/
bool symcrust_common_eq_41(symcrust_common_Error *self, symcrust_common_Error *other);

extern bool
symcrust_common__core__cmp__PartialEq_symcrust__common__Error__for_symcrust__common__Error__ne(
  symcrust_common_Error *x0,
  symcrust_common_Error *x1
);

/**
This function found in impl {core::fmt::Debug for symcrust::common::Error}
*/
core_result_Result_10
symcrust_common_fmt_b9(symcrust_common_Error *self, core_fmt_Formatter *f);

#if defined(__cplusplus)
}
#endif

#define __internal_symcrust_common_H_DEFINED
#endif
